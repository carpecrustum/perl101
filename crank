#!/usr/bin/perl -w

use strict;
use warnings;
use Pod::Simple::HTMLBatch 3.02;
use CGI qw( :standard );

use File::Slurp qw( write_file );

$/ = "";

my @sections;
while ( my $para = <> ) {
    chomp $para;

    $para =~ s/=head1 // or next;

    push( @sections, $para );
}

my $batch= Pod::Simple::HTMLBatch->new;
$batch->batch_convert( ['s/'] , '101/' );

my @toplinks;
for my $section ( @sections ) {
    my $section_file = make_filename( $section );
    if ( -s "s/$section.pod" ) {
        push( @toplinks, qq{<a href="$section_file.html">$section</a><br>\n} );
    }
}

my $header = <<'EOF';
<html>
    <head>
        <title>101 Things Every Perl Programmer Should Know</title>
    </head>
    <body bgcolor="white">
    <h1>101 Things Every Perl Programmer Should Know</h1>
EOF

my $footer = <<'EOF';
    </body>
</html>
EOF

write_file( '101/index.html', $header, @toplinks, feedback( 'index.html' ), $footer );

sub feedback {
    my $source_page = shift;

    my $form = join( '',
        start_form( -method => 'POST', -action => '/cgi-sys/formmail.pl' ),
        hidden( 'subject' => "Feedback: $source_page" ),
        hidden( 'recipient' => 'andy@petdance.com' ),
        hidden( 'return_link_url' => 'http://perl101.org/' ),
        hidden( 'return_link_title' => 'Return to Perl 101' ),
        table(
            Tr(
                th( {align=>'right'}, 'Your name' ),
                td( textfield( 'realname' ) ),
            ),
            Tr(
                th( {align=>'right'}, 'Your email' ),
                td( textfield( 'email' ) ),
            ),
            Tr( {valign=>'top'},
                th( {align=>'right'}, 'Your comment' ),
                td(
                    textarea( 'text', '', 10, 70 ), br(),
                    submit( -value => 'Send' ),
                ),
            ),
        ), # table
        end_form(),
    );
    return <<"EOF";
    <hr>
    <h3>We want your feedback</h3>
    If we can improve perl101.org in any way, please let us know with this form.
    <p>
    $form
EOF
}

sub make_filename {
    my $name = lc shift;

    $name =~ s/[^-a-z]+/-/g;
    $name =~ s/^-//;
    $name =~ s/-$//;

    return $name;
}
