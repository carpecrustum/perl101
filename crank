#!/usr/bin/perl -w

use strict;
use warnings;
use Carp::Always;

use Template ();
use Template::Constants qw( :debug :chomp );

use Pod::Simple::HTML;

$/ = "";

my %defaults = (
    INCLUDE_PATH    => [ qw( tt ) ],
    OUTPUT_PATH     => '101/',
    DEBUG           => DEBUG_UNDEF,
    TRIM            => CHOMP_ALL,
    PRE_CHOMP       => 1,
    POST_CHOMP      => 1,
);

my $tt = Template->new( \%defaults );
my $vars = {};

my @podfiles;
my @sidelinks;
push( @sidelinks, {
    filename => './',
    text => 'Home',
} );

push( @podfiles, {
    section => 'Home',
    podfile => '101.pod',
    htmlfile => 'index.html',
} );

while ( my $para = <> ) {
    chomp $para;

    $para =~ s/=head1 // or next;

    my $section = $para;
    my $sectionfile = make_filename( $section );

    my $podfile = "s/$sectionfile.pod";
    if ( -s $podfile ) {
        my $htmlfile = "$sectionfile.html";
        push( @sidelinks, {
            filename => $htmlfile,
            text => $section,
        } );
        push( @podfiles, {
            section => $section,
            podfile => $podfile,
            htmlfile => $htmlfile,
        } );
    }
}

for my $vars ( @podfiles ) {
    $vars->{pod} = pod2html( $vars->{podfile} );
    $vars->{sidelinks} = \@sidelinks;
    $tt->process( 'section.tt', $vars, $vars->{htmlfile} ) || die $tt->error;
}

sub make_filename {
    my $name = lc shift;

    $name =~ s/[^-a-z]+/-/g;
    $name =~ s/^-//;
    $name =~ s/-$//;

    return $name;
}

sub pod2html {
    my $podfile = shift;

    my $html;

    my $parser = Pod::Simple::HTML->new;
    $parser->html_header_before_title( '' );
    $parser->html_header_after_title( '' );
    $parser->html_footer( '' );

    $parser->complain_stderr( 1 );
    $parser->output_string( \$html );
    $parser->parse_file( $podfile );

    return $html;
}
